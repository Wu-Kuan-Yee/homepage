jQuery112406681445309160767_1674228316647("\n\n\n\n    var Map = function(map_el, options) {\n        var _map = this;\n        _map.container = map_el;\n        _map.options = {\n            'user': null,\n            'domain': null,\/\/alphanumeric domain name\n            'loadMore': true,\n            'updateCounts': false,\n            'animate': true,\n            'backgroundColor': '#2B77AC',\n            'regionStyleFill': '#CCE190',\n            'regionStyleStroke': '#636B4C',\n            'dotColorOld': '#42b983',\n\n            'markerStyleInitialFill': '#42b983', \/\/RED\n            'markerStyleInitialStroke': '#ffffff',\n            'markerStyleFill': '#61f3b1', \/\/ORANGE\n            'markerStyleStroke': '#FFFFFF',\n            'dotColorRecent': '#61f3b1',\n\n            'addLabels': false,\n            'mapType':'default',\n            'addAds': false,\n            'updateLink': false,\n            'addRealtimeVisitors': false,\n            'globalTotal': false,\n            'zoomMax': 8,\n            'zoomOnScroll': true,\n            'panOnDrag': true,\n            'zoomButtons': true,\n            'retryConnetionInterval': 30000,\/\/ms\n            'dotRadiusScale': [3, 12]\n        };\n\n        if(typeof options == 'object'){\n            _map.options = $.extend({}, _map.options, options);\n        }\n\n        _map.initial = true;\n        _map.mapObject;\n\n        _map.oneUp = function(one_up_container, num_element){\n            var count = 1;\n            var badges = one_up_container.find('.badge.plus');\n            if(badges.length > 0){\n                count += parseInt(badges.data('count'));\n            }\n            badges.remove();\n            $('<span class=\"badge plus\" style=\"margin: 0px 4px 0px 0px; vertical-align: middle;\">+'+count+'<\/span>').data('count', count)\n                .prependTo(one_up_container).fadeOut(3500, function(){\n                $(this).remove();\n            });\n            var total_count = (parseInt(num_element.data('count'))+1);\n            num_element.html(total_count.toString().replace(\/\\B(?=(\\d{3})+(?!\\d))\/g, \",\"))\n                .data('count', total_count);\n        };\n\n        _map.updateCounts = function(ip_id, location, flag, date, hits, country_code){\n            if(!_map.options.updateCounts){\n                return false;\n            }\n\n            _map.container.find('.clustrmaps-visitors').html(hits+' visitors');\n\n\n        }\n\n\n        _map.addRealtimeVisitors = function(ip_id, location, flag, date, hits, country_code){\n            if(!_map.options.addRealtimeVisitors){\n                return false;\n            }\n            var notice = $('#large_map-container > .notice-centered-container');\n            if(notice.length === 1){\n                notice.remove();\n            }\n            var hits_text = 'times';\n            var badge = '';\n            var existing_country_item = $('#top_countries .item[data-country_code=\"'+country_code+'\"]');\n\n\n            if(hits === '1'){\n                hits_text = 'time';\n                badge = '<span class=\"badge\">NEW<\/span> ';\n                if(existing_country_item.length > 0){\n                    var count = 1;\n                    var badges = existing_country_item.find('.badge.plus');\n                    if(badges.length > 0){\n                        count += parseInt(badges.data('count'));\n                    }\n                    badges.remove();\n                    $('<span class=\"badge plus\" style=\"margin: 0px 4px 0px 0px; vertical-align: middle;\">+'+count+'<\/span>').data('count', count)\n                        .prependTo(existing_country_item.find('.right > .text')).fadeOut(3500, function(){\n                        $(this).remove();\n                    });\n                    var country_count = (parseInt(existing_country_item.find('.right > .text > .count_text').data('count'))+1);\n                    existing_country_item.data('visits', country_count).find('.right > .text > .count_text').html('<span class=\"count\">'+country_count.toString().replace(\/\\B(?=(\\d{3})+(?!\\d))\/g, \",\")+ '<\/span> visits')\n                        .data('count', country_count);\n                }\n            }\n\n            $('.non_unique_visitor_count').each(function(index){\n                _map.oneUp(\n                    $(this).find('.non_unique_visitor_count-oneup'),\n                    $(this).find('.non_unique_visitor_count-count')\n                );\n            });\n\n            var emptied = false;\n            var item_count = $('#recent_visitors').find('.item').length;\n            if(!emptied && item_count === 0){\n                $('#recent_visitors').html('');\n                emptied = true;\n            }else if(item_count >= 15 && $('#recent_visitors').css('max-height') === 'none'){\n                ;\n                $('#recent_visitors').css({\n                    'max-height': 15*$('#recent_visitors').find('.item').one().css('height', 'auto').height() + 12,\n                    'overflow':'hidden'\n                });\n            }\n\n            var existing_item = $('#recent_visitors').find('.item[data-ip_id=\"'+ip_id+'\"]');\n\n\n\n            if(existing_item.length > 0){\n                existing_item.remove();\n            }\n            \/\/console.log(_map.initial_hit_date);\n            \/\/console.log(Math.round(+new Date() \/ 1000 ));\n            var minutes = Math.ceil((parseInt(Math.round(+new Date() \/ 1000 )) - parseInt(_map.initial_hit_date))\/60);\n            if(minutes === 1){\n                var since_text = 'minute';\n            }else if(minutes >= 60){\n                var since_text = Math.floor(minutes\/60) + ' hour';\n            }else{\n                var since_text = minutes + ' minutes';\n            }\n\n            $('<div data-ip_id=\"'+ip_id+'\" class=\"item\" '\n                +' style=\"height: 0px; visibility: hidden;\">'\n                +'<div class=\"control\">'\n                +'<span class=\"flag '+flag+'\"> <\/span>'\n                +'<span class=\"text\"><span class=\"inner\">Visitor from '+location+'<\/span><\/span>'\n                +'<span class=\"subtext\"><span class=\"inner\">'+badge+'Visited '+hits+' '\n                + hits_text +' within last '+since_text+'.<\/span><\/span>'\n                +'<span class=\"right\">'\n                +'<span class=\"text\">' +'<span class=\"timeago\" title=\"'+date+' +0000\">'\n                +date+'<\/span>'+'<span class=\"expand\"><i class=\"icon-down-dir\"><\/i><\/span><\/span>'\n                +'<\/span>'\n                +'<\/div>'\n                +'<div class=\"catchall\"><\/div>'\n                +'<div class=\"sub-items\">'\n                +'<\/div>'\n                +'<\/div>').prependTo('#recent_visitors').animate({\n                height: 38\n            }, 300 , function(){\n                $(this).css({'visibility': 'visible', 'height': 'auto', 'background-color': '#CCE190'}).animate({\n                    'backgroundColor': \"#fafafa\"\n                }, 1000 );\n                $('#recent_visitors').find('item').slice(15).remove();\n            });\n        }\n\n\n\n        _map.init = function(){\n\n\n            _map.container.vectorMap({\n                map: 'world_mill_en',\n                backgroundColor: _map.options.backgroundColor,\n                scaleColors: ['#C8EEFF', '#0071A4'],\n                normalizeFunction: 'polynomial',\n                hoverOpacity: 0.7,\n                baseScale : 1,\n                zoomOnScroll: false,\n                zoomOnScroll: _map.options.zoomOnScroll,\n                panOnDrag: _map.options.panOnDrag,\n                zoomMax: _map.options.zoomMax,\n                zoomMin: _map.options.zoomMin,\n                zoomButtons: _map.options.zoomButtons,\n                hoverColor: false,\n                regionStyle: {\n                    initial: {\n                        fill: _map.options.regionStyleFill,\n                        \"fill-opacity\": 1,\n                        stroke: _map.options.regionStyleStroke,\n                        \"stroke-width\": 1,\n                        \"stroke-opacity\": 1\n                    },\n                    hover: {\n                        \"fill-opacity\": 1,\n                        fill: '#DCF1A0',\n                        cursor: 'pointer'\n                    },\n                    selected: {\n                    },\n                    selectedHover: {\n                    }\n                },\n                markerStyle: {\n                    initial: {\n                        fill: _map.options.markerStyleInitialFill,\n                        stroke: _map.options.markerStyleInitialStroke,\n                        \"fill-opacity\": .7,\n                        \"stroke-width\": .5,\n                        r: 3\n\n                    },\n                    hover: {\n                        \"fill-opacity\": 1,\n                        stroke: '#FFFFFF',\n                        cursor: 'pointer'\n                    }\n                },\n                series: {\n                    markers: [{\n                        attribute: 'r',\n                        scale: _map.options.dotRadiusScale,\n                        values: [45,38,33,27,26,24,22,13,12,11,9,9,8,8,8,6,6,6,6,5,5,5,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]\n                    }]\n                },\n                markers: [\n                    {latLng: [47.4984000, 19.0404000], name: \"45 visits from Budapest, Hungary\"}\n,{latLng: [37.7510000, -97.8220000], name: \"38 visits from United States\"}\n,{latLng: [47.1000000, 17.9167000], name: \"33 visits from Veszpr\u00e9m, Hungary\"}\n,{latLng: [35.0000000, 105.0000000], name: \"27 visits from China\"}\n,{latLng: [39.9289000, 116.3883000], name: \"26 visits from Beijing, China\"}\n,{latLng: [28, -68], name: \"24 visits from unknown location\"}\n,{latLng: [52.6139000, -2.6947000], name: \"22 visits from Shrewsbury, United Kingdom\"}\n,{latLng: [22.2833000, 114.1500000], name: \"13 visits from Central District, Hong Kong\"}\n,{latLng: [33.6511000, 130.4429000], name: \"12 visits from Fukuoka, Japan\"}\n,{latLng: [22.2795000, 114.1460000], name: \"11 visits from Central, Hong Kong\"}\n,{latLng: [41.8803000, -87.6241000], name: \"9 visits from Chicago, United States\"}\n,{latLng: [22.3833000, 114.2000000], name: \"9 visits from Sha Tin Wai, Hong Kong\"}\n,{latLng: [35.8180000, 139.6633000], name: \"8 visits from Shimotoda, Japan\"}\n,{latLng: [28.1783000, 113.1117000], name: \"8 visits from Changsha, China\"}\n,{latLng: [41.1034000, -104.9059000], name: \"8 visits from Cheyenne, United States\"}\n,{latLng: [22.2500000, 114.1667000], name: \"6 visits from Hong Kong\"}\n,{latLng: [31.8943000, 34.8192000], name: \"6 visits from Rehovot, Israel\"}\n,{latLng: [25.0392000, 121.5250000], name: \"6 visits from Taipei, Taiwan\"}\n,{latLng: [59.8944000, 30.2642000], name: \"6 visits from Russia\"}\n,{latLng: [33.4148000, -111.9093000], name: \"5 visits from Tempe, United States\"}\n,{latLng: [55.7522000, 37.6156000], name: \"5 visits from Moscow, Russia\"}\n,{latLng: [50.8796000, 4.7009000], name: \"5 visits from Leuven, Belgium\"}\n,{latLng: [59.5764000, 30.1283000], name: \"4 visits from Gatchina, Russia\"}\n,{latLng: [31.0449000, 121.4012000], name: \"4 visits from Shanghai, China\"}\n,{latLng: [1.2931000, 103.8558000], name: \"4 visits from Singapore, Singapore\"}\n,{latLng: [51.5000000, -0.1300000], name: \"4 visits from United Kingdom\"}\n,{latLng: [39.1358000, -76.8720000], name: \"4 visits from Laurel, United States\"}\n,{latLng: [42.4019000, -71.1193000], name: \"4 visits from Somerville, United States\"}\n,{latLng: [37.5091000, 122.1136000], name: \"4 visits from Weihai, China\"}\n,{latLng: [36.7844000, 119.9464000], name: \"3 visits from Pingdu, China\"}\n,{latLng: [35.6976000, 139.7701000], name: \"3 visits from Chiyoda-ku, Japan\"}\n,{latLng: [48.8534000, 2.3488000], name: \"3 visits from Paris, France\"}\n,{latLng: [45.5356000, 10.2147000], name: \"3 visits from Brescia, Italy\"}\n,{latLng: [30.4032000, -97.7530000], name: \"3 visits from Austin, United States\"}\n,{latLng: [65.0545000, 25.4875000], name: \"3 visits from Oulu, Finland\"}\n,{latLng: [-33.4500000, -70.6667000], name: \"3 visits from Santiago, Chile\"}\n,{latLng: [31.7954000, -94.1791000], name: \"3 visits from Center, United States\"}\n,{latLng: [40.1202000, -88.1551000], name: \"3 visits from Urbana, United States\"}\n,{latLng: [33.6378000, -117.8095000], name: \"3 visits from Irvine, United States\"}\n,{latLng: [28.2333000, 117.0000000], name: \"3 visits from Yingtan, China\"}\n,{latLng: [35.6850000, 139.7514000], name: \"3 visits from Tokyo, Japan\"}\n,{latLng: [36.0000000, 138.0000000], name: \"3 visits from Japan\"}\n,{latLng: [28.5500000, 115.9333000], name: \"3 visits from Nanchang, China\"}\n,{latLng: [31.8642000, 117.2865000], name: \"3 visits from Hefei, China\"}\n,{latLng: [35.4040000, -78.4153000], name: \"3 visits from Four Oaks, United States\"}\n,{latLng: [41.3089000, -72.6190000], name: \"3 visits from Madison, United States\"}\n,{latLng: [28.8107000, 113.0662000], name: \"2 visits from Miluo Chengguanzhen, China\"}\n,{latLng: [-41.0000000, 174.0000000], name: \"2 visits from New Zealand\"}\n,{latLng: [51.5144000, -0.0941000], name: \"2 visits from London, United Kingdom\"}\n,{latLng: [40.7961000, -81.3799000], name: \"2 visits from North Canton, United States\"}\n,{latLng: [50.5961000, 5.4459000], name: \"2 visits from Flemalle, Belgium\"}\n,{latLng: [34.6836000, 113.5325000], name: \"2 visits from Zhengzhou, China\"}\n,{latLng: [22.5333000, 114.1333000], name: \"2 visits from Shenzhen, China\"}\n,{latLng: [47.3333000, 13.3333000], name: \"2 visits from Austria\"}\n,{latLng: [48.8600000, 2.3500000], name: \"2 visits from France\"}\n,{latLng: [40.4586000, -3.4719000], name: \"2 visits from Torrej\u00f3n de Ardoz, Spain\"}\n,{latLng: [32.0617000, 118.7778000], name: \"2 visits from Nanjing, China\"}\n,{latLng: [42.3364000, -71.0326000], name: \"2 visits from Boston, United States\"}\n,{latLng: [40.7589000, -73.9913000], name: \"2 visits from New York, United States\"}\n,{latLng: [44.7822000, -88.6090000], name: \"2 visits from Shawano, United States\"}\n,{latLng: [31.5000000, 34.7500000], name: \"2 visits from Israel\"}\n,{latLng: [40.6403000, 22.9439000], name: \"2 visits from Thessaloniki, Greece\"}\n,{latLng: [36.0986000, 120.3719000], name: \"2 visits from China\"}\n,{latLng: [-33.4940000, 143.2104000], name: \"2 visits from Australia\"}\n,{latLng: [40.5958000, -74.1525000], name: \"2 visits from Staten Island, United States\"}\n,{latLng: [46.5000000, -84.3333000], name: \"2 visits from Sault Ste. Marie, Canada\"}\n,{latLng: [56.0000000, 24.0000000], name: \"2 visits from Republic of Lithuania\"}\n,{latLng: [39.1423000, 117.1726000], name: \"1 visit from Tianjin, China\"}\n,{latLng: [30.2936000, 120.1614000], name: \"1 visit from Hangzhou, China\"}\n,{latLng: [34.9903000, 135.8416000], name: \"1 visit from Kyoto, Japan\"}\n,{latLng: [52.2100000, 5.9694000], name: \"1 visit from Apeldoorn, Netherlands\"}\n,{latLng: [50.8336000, 4.3337000], name: \"1 visit from Brussels, Belgium\"}\n,{latLng: [50.1433000, 14.4821000], name: \"1 visit from Prague, Czech Republic\"}\n,{latLng: [42.7257000, -84.6360000], name: \"1 visit from Lansing, United States\"}\n,{latLng: [51.1330000, -113.8560000], name: \"1 visit from Calgary, Canada\"}\n,{latLng: [49.1888000, -122.8439000], name: \"1 visit from Surrey, Canada\"}\n,{latLng: [37.4315000, 47.7874000], name: \"1 visit from Sabz, Iran\"}\n,{latLng: [51.5667000, 46.0333000], name: \"1 visit from Saratov, Russia\"}\n,{latLng: [52.2488000, 21.0024000], name: \"1 visit from Warsaw, Poland\"}\n,{latLng: [23.5000000, 121.0000000], name: \"1 visit from Taiwan\"}\n,{latLng: [22.8167000, 108.3167000], name: \"1 visit from Nanning, China\"}\n,{latLng: [39.5097000, 116.6947000], name: \"1 visit from Langfang, China\"}\n,{latLng: [23.0964000, 109.6092000], name: \"1 visit from Guigang, China\"}\n,{latLng: [22.4000000, 113.9833000], name: \"1 visit from Tuen Mun, Hong Kong\"}\n,{latLng: [35.5206000, 139.7172000], name: \"1 visit from Kawasaki, Japan\"}\n,{latLng: [1.3667000, 103.8000000], name: \"1 visit from Singapore\"}\n,{latLng: [23.4522000, 116.0922000], name: \"1 visit from Shantou, China\"}\n,{latLng: [40.4000000, -3.6833000], name: \"1 visit from Spain\"}\n,{latLng: [51.3500000, -0.0333000], name: \"1 visit from Croydon, United Kingdom\"}\n,{latLng: [50.8333000, 4.0000000], name: \"1 visit from Belgium\"}\n,{latLng: [44.0484000, -92.4948000], name: \"1 visit from Rochester, United States\"}\n,{latLng: [43.2380000, -87.9894000], name: \"1 visit from Mequon, United States\"}\n,{latLng: [43.6437000, -79.5767000], name: \"1 visit from Etobicoke, Canada\"}\n,{latLng: [60.0000000, -95.0000000], name: \"1 visit from Canada\"}\n,{latLng: [60.1256000, 29.8764000], name: \"1 visit from Saint Petersburg, Russia\"}\n,{latLng: [55.8000000, 37.9400000], name: \"1 visit from Balashikha, Russia\"}\n,{latLng: [44.3819000, 26.1227000], name: \"1 visit from Bucharest, Romania\"}\n,{latLng: [52.2394000, 21.0362000], name: \"1 visit from Poland\"}\n,{latLng: [30.8703000, 120.0933000], name: \"1 visit from Huzhou, China\"}\n,{latLng: [55.7500000, 37.6166000], name: \"1 visit from Russia\"}\n,{latLng: [53.2000000, -2.9167000], name: \"1 visit from Chester, United Kingdom\"}\n,{latLng: [51.1747000, 4.5201000], name: \"1 visit from Vremde, Belgium\"}\n,{latLng: [47.7010000, 9.5713000], name: \"1 visit from Meckenbeuren, Germany\"}\n,{latLng: [40.4165000, -3.7026000], name: \"1 visit from Madrid, Spain\"}\n,{latLng: [39.0481000, -77.4728000], name: \"1 visit from Ashburn, United States\"}\n,{latLng: [34.0203000, -117.8653000], name: \"1 visit from Walnut, United States\"}\n,{latLng: [45.5599000, -73.5691000], name: \"1 visit from Montreal, Canada\"}\n,{latLng: [28.6627000, 121.4331000], name: \"1 visit from Taizhou, China\"}\n,{latLng: [59.4330000, 24.7323000], name: \"1 visit from Tallinn, Estonia\"}\n,{latLng: [13.0878000, 80.2785000], name: \"1 visit from Chennai, India\"}\n,{latLng: [2.5000000, 112.5000000], name: \"1 visit from Malaysia\"}\n,{latLng: [30.5856000, 114.2665000], name: \"1 visit from Wuhan, China\"}\n,{latLng: [22.3500000, 114.1333000], name: \"1 visit from Kwai Chung, Hong Kong\"}\n,{latLng: [34.7117000, 135.4909000], name: \"1 visit from Osaka, Japan\"}\n,{latLng: [31.3041000, 120.5954000], name: \"1 visit from Suzhou, China\"}\n,{latLng: [47.3667000, 8.5500000], name: \"1 visit from Zurich, Switzerland\"}\n,{latLng: [51.2993000, 9.4910000], name: \"1 visit from Germany\"}\n,{latLng: [45.0500000, 7.6667000], name: \"1 visit from Turin, Italy\"}\n,{latLng: [33.2409000, -111.7792000], name: \"1 visit from Chandler, United States\"}\n,{latLng: [5.3653000, 100.3067000], name: \"1 visit from Glugor, Malaysia\"}\n,{latLng: [36.2066000, 36.1572000], name: \"1 visit from Antakya, Turkey\"}\n,{latLng: [40.8521000, 27.3844000], name: \"1 visit from Tekirda\u011f, Turkey\"}\n,{latLng: [20.0000000, 77.0000000], name: \"1 visit from India\"}\n,{latLng: [3.8077000, 103.3260000], name: \"1 visit from Kuantan, Malaysia\"}\n                ]\n            });\n\n            _map.mapObject = _map.container.vectorMap('get', 'mapObject');\n                        _map.loadMore();\n            \n            _map.addLabels();\n            _map.updateLink();\n\n\n        };\n\n        _map.last_hit_id = '14241043272';\n        _map.initial_hit_id = '14241043272';\/\/hit id since end of cached data.\n        _map.initial_hit_date = '1674228249';\n\n        _map.updateLink = function(){\n\n            if(!_map.options.updateLink){\n                return false;\n            }\n\n\n            _map.container.parent().parent().attr('href', \"http:\/\/clustrmaps.com\" + _map.options.profile_link + '?utm_source=widget&utm_campaign=widget_ctr');\n\n        }\n        _map.addLabels = function(){\n\n            if(!_map.options.addLabels){\n                return false;\n            }\n\n            \n            _map.container.parent()\n                .find('.clustrmaps-visitors').html('38,391 Total Pageviews');\n\n                    }\n\n\n        _map.evalInScope = function(data){\n            eval(data);\n        };\n\n\n        _map.loadMore = function(){\n\n            if(_map.initial !== true && _map.options.loadMore === false){\n                return false;\n            }\n\n\n            _map.ajax(\n                '\/\/clustrmaps.com\/ajax\/map',\n                {\n                    'last_hit_id': _map.last_hit_id,\n                    'initial_hit_id': _map.initial_hit_id,\n                    'initial': _map.initial,\n                    'animate': _map.options.animate,\n                    'user': _map.options.user,\n                    'url': _map.options.domain,\n                    'id' : _map.options.project_id,\n                    'globalTotal': _map.options.globalTotal,\n                    'mapType': _map.options.mapType\n                },\n                false,\n                false,\n                _map.evalInScope,\n                'jsonp'\n            );\n\n            _map.initial = false;\n        };\n\n\n        _map.ajax = function(\n            url,\n            data,\n            destination,\n            show_loader,\/* true (default) = show full body loader;\n             false = don't show any loaders;\n             string = add ajax_loading class to element found by string;*\/\n            callback,\n            dataType,\n            replace_destination\n        ){\n            if(show_loader === undefined){\n                show_loader = true;\n            }\n            if(show_loader === true){\n\n            }else if(show_loader !== false){\n                if(typeof show_loader === 'object'){\n                    var loader_el = show_loader;\n                }else{\n                    var loader_el = $(show_loader);\n                }\n                \/\/display loader overlay\n                if(loader_el.find(' > .ajax_loader').length === 0){\n                    loader_el.append('<div class=\"ajax_loader\"><\/div>');\n                }\n                loader_el.addClass('ajax_loading');\n            }\n\n            $.ajax({\n                type: \"GET\",\n                url: url,\n                timeout: 5000,\n                dataType: dataType,\n                data: data,\n                complete: function(){\n                    \/\/hide loader overlay if open\n                    if(show_loader === true){\n\n                    }else if(show_loader !== false){\n                        $(show_loader).removeClass('ajax_loading');\n                    }\n                },\n                success: function(data, textStatus, jqXHR){\n                    if(typeof callback === 'function'){\n                        callback(data);\n                    }\n                    if(jqXHR.getResponseHeader('x-ajax-redirect') !== null){\n                        window.location = jqXHR.getResponseHeader('x-ajax-redirect');\n                        return false;\n                    }\n                    if(replace_destination === true){\n                        $(destination).replaceWith(data);\n                    }else{\n                        $(destination).html(data);\n                    }\n                    _map.container.parent().find('.clustrmaps-connection')\n                        .removeClass('clustrmaps-failed').addClass('clustrmaps-live').html('live');\n                    \/\/_app.fadeMessages(destination);\n                    \/\/replace html into destination\n                    \/\/alert(destination);\n                },\n                error: function(jqXHR, textStatus, errorThrown ){\n\n                    console.log(\"Clustrmaps error: could not connect to server!\");\n\n                    _map.container.parent().find('.clustrmaps-connection')\n                        .addClass('clustrmaps-failed').removeClass('clustrmaps-live').html('connecting...');\n                    setTimeout(function(){\n                        _map.loadMore();\n                    }, _map.options.retryConnetionInterval);\n\n                    \/\/if a overlay is open\n                    \/\/save to reopen later\n                    \/\/close it\n                    \/\/else\n                    \/\/clear out previous popup reference\n\n                    \/\/if custom error header was returned\n                    \/\/add it to error contents\n                    \/\/else\n                    \/\/set defaul error contents\n\n                    \/\/open error pop\n                }\n\n            });\n        };\n\n        _map.init();\n        return this;\n    };\n\n    \n                $('.clustrmaps-loading').remove();\n                \n\n                var clustrmap = new Map(\n                    $(\".clustrmaps-map\"),\n                    {\n                        'user': \"0\",\n                        'domain': '\"yk-liu.github.io\"',\n                        'project_id': 2168847,\n                        'profile_link' : '\/site\/1ahhr',\n                        'addLabels': true,\n                        'animate': true,\n                        'mapType': 'widget',\n                        'updateCounts': true,\n                        'backgroundColor': 'transparent',\n                        'updateLink': true,\n                        'loadMore': false,\n                        'zoomOnScroll': false,\n                        'panOnDrag': false,\n                        'zoomButtons': false,\n                        'dotRadiusScale': [2, 4]\n                    }\n                );\n\n")
            