function createNode() {
    var container = document.createDocumentFragment();
    var e_0 = document.createElement("div");
    var e_1 = document.createElement("meta");
    e_1.setAttribute("charset", "UTF-8");
    e_0.appendChild(e_1);
    var e_2 = document.createElement("title");
    e_2.appendChild(document.createTextNode("立体点缀(鼠标移动翻转)"));
    e_0.appendChild(e_2);
    var e_3 = document.createElement("style");
    e_3.appendChild(document.createTextNode("\nhtml {\nheight: 100%;\nbackground-image: -webkit-radial-gradient(ellipse farthest-corner at center top, #000d4d 0%, #000105 100%);\nbackground-image: radial-gradient(ellipse farthest-corner at center top, #000d4d 0%, #000105 100%);\ncursor: move;\n}\nbody {\nwidth: 100%;\nmargin: 0;\noverflow: hidden;\n}\n/* Demo Buttons Style */\n.codrops-demos {\nfont-size: 0.8em;\ntext-align:center;\nposition:absolute;\nz-index:99;\nwidth:96%;\n}\n.codrops-demos a {\ndisplay: inline-block;\nmargin: 0.35em 0.1em;\npadding: 0.5em 1.2em;\noutline: none;\ntext-decoration: none;\ntext-transform: uppercase;\nletter-spacing: 1px;\nfont-weight: 700;\nborder-radius: 2px;\nfont-size: 110%;\nborder: 2px solid transparent;\ncolor:#fff;\n}\n.codrops-demos a:hover,\n.codrops-demos a.current-demo {\nborder-color: #383a3c;\n}\n"));
    e_0.appendChild(e_3);
    var e_4 = document.createElement("canvas");
    e_4.setAttribute("id", "canv");
    e_0.appendChild(e_4);
    var e_5 = document.createElement("script");
    e_5.appendChild(document.createTextNode("\nvar num = 200;\nvar w = window.innerWidth;\nvar h = window.innerHeight;\nvar max = 100;\nvar _x = 0;\nvar _y = 0;\nvar _z = 150;\nvar dtr = function(d) {\nreturn d * Math.PI / 180;\n};\nvar rnd = function() {\nreturn Math.sin(Math.floor(Math.random() * 360) * Math.PI / 180);\n};\nvar dist = function(p1, p2, p3) {\nreturn Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2) + Math.pow(p2.z - p1.z, 2));\n};\nvar cam = {\nobj: {\nx: _x,\ny: _y,\nz: _z\n},\ndest: {\nx: 0,\ny: 0,\nz: 1\n},\ndist: {\nx: 0,\ny: 0,\nz: 200\n},\nang: {\ncplane: 0,\nsplane: 0,\nctheta: 0,\nstheta: 0\n},\nzoom: 1,\ndisp: {\nx: w / 2,\ny: h / 2,\nz: 0\n},\nupd: function() {\ncam.dist.x = cam.dest.x - cam.obj.x;\ncam.dist.y = cam.dest.y - cam.obj.y;\ncam.dist.z = cam.dest.z - cam.obj.z;\ncam.ang.cplane = -cam.dist.z / Math.sqrt(cam.dist.x * cam.dist.x + cam.dist.z * cam.dist.z);\ncam.ang.splane = cam.dist.x / Math.sqrt(cam.dist.x * cam.dist.x + cam.dist.z * cam.dist.z);\ncam.ang.ctheta = Math.sqrt(cam.dist.x * cam.dist.x + cam.dist.z * cam.dist.z) / Math.sqrt(cam.dist.x * cam.dist.x + cam.dist.y * cam.dist.y + cam.dist.z * cam.dist.z);\ncam.ang.stheta = -cam.dist.y / Math.sqrt(cam.dist.x * cam.dist.x + cam.dist.y * cam.dist.y + cam.dist.z * cam.dist.z);\n}\n};\nvar trans = {\nparts: {\nsz: function(p, sz) {\nreturn {\nx: p.x * sz.x,\ny: p.y * sz.y,\nz: p.z * sz.z\n};\n},\nrot: {\nx: function(p, rot) {\nreturn {\nx: p.x,\ny: p.y * Math.cos(dtr(rot.x)) - p.z * Math.sin(dtr(rot.x)),\nz: p.y * Math.sin(dtr(rot.x)) + p.z * Math.cos(dtr(rot.x))\n};\n},\ny: function(p, rot) {\nreturn {\nx: p.x * Math.cos(dtr(rot.y)) + p.z * Math.sin(dtr(rot.y)),\ny: p.y,\nz: -p.x * Math.sin(dtr(rot.y)) + p.z * Math.cos(dtr(rot.y))\n};\n},\nz: function(p, rot) {\nreturn {\nx: p.x * Math.cos(dtr(rot.z)) - p.y * Math.sin(dtr(rot.z)),\ny: p.x * Math.sin(dtr(rot.z)) + p.y * Math.cos(dtr(rot.z)),\nz: p.z\n};\n}\n},\npos: function(p, pos) {\nreturn {\nx: p.x + pos.x,\ny: p.y + pos.y,\nz: p.z + pos.z\n};\n}\n},\npov: {\nplane: function(p) {\nreturn {\nx: p.x * cam.ang.cplane + p.z * cam.ang.splane,\ny: p.y,\nz: p.x * -cam.ang.splane + p.z * cam.ang.cplane\n};\n},\ntheta: function(p) {\nreturn {\nx: p.x,\ny: p.y * cam.ang.ctheta - p.z * cam.ang.stheta,\nz: p.y * cam.ang.stheta + p.z * cam.ang.ctheta\n};\n},\nset: function(p) {\nreturn {\nx: p.x - cam.obj.x,\ny: p.y - cam.obj.y,\nz: p.z - cam.obj.z\n};\n}\n},\npersp: function(p) {\nreturn {\nx: p.x * cam.dist.z / p.z * cam.zoom,\ny: p.y * cam.dist.z / p.z * cam.zoom,\nz: p.z * cam.zoom,\np: cam.dist.z / p.z\n};\n},\ndisp: function(p, disp) {\nreturn {\nx: p.x + disp.x,\ny: -p.y + disp.y,\nz: p.z + disp.z,\np: p.p\n};\n},\nsteps: function(_obj_, sz, rot, pos, disp) {\nvar _args = trans.parts.sz(_obj_, sz);\n_args = trans.parts.rot.x(_args, rot);\n_args = trans.parts.rot.y(_args, rot);\n_args = trans.parts.rot.z(_args, rot);\n_args = trans.parts.pos(_args, pos);\n_args = trans.pov.plane(_args);\n_args = trans.pov.theta(_args);\n_args = trans.pov.set(_args);\n_args = trans.persp(_args);\n_args = trans.disp(_args, disp);\nreturn _args;\n}\n};\n(function() {\n\"use strict\";\nvar threeD = function(param) {\nthis.transIn = {};\nthis.transOut = {};\nthis.transIn.vtx = (param.vtx);\nthis.transIn.sz = (param.sz);\nthis.transIn.rot = (param.rot);\nthis.transIn.pos = (param.pos);\n};\nthreeD.prototype.vupd = function() {\nthis.transOut = trans.steps(\nthis.transIn.vtx,\nthis.transIn.sz,\nthis.transIn.rot,\nthis.transIn.pos,\ncam.disp\n);\n};\nvar Build = function() {\nthis.vel = 0.04;\nthis.lim = 360;\nthis.diff = 200;\nthis.initPos = 100;\nthis.toX = _x;\nthis.toY = _y;\nthis.go();\n};\nBuild.prototype.go = function() {\nthis.canvas = document.getElementById(\"canv\");\nthis.canvas.width = window.innerWidth;\nthis.canvas.height = window.innerHeight;\nthis.$ = canv.getContext(\"2d\");\nthis.$.globalCompositeOperation = 'source-over';\nthis.varr = [];\nthis.dist = [];\nthis.calc = [];\nfor (var i = 0, len = num; i < len; i++) {\nthis.add();\n}\nthis.rotObj = {\nx: 0,\ny: 0,\nz: 0\n};\nthis.objSz = {\nx: w / 5,\ny: h / 5,\nz: w / 5\n};\n};\nBuild.prototype.add = function() {\nthis.varr.push(new threeD({\nvtx: {\nx: rnd(),\ny: rnd(),\nz: rnd()\n},\nsz: {\nx: 0,\ny: 0,\nz: 0\n},\nrot: {\nx: 20,\ny: -20,\nz: 0\n},\npos: {\nx: this.diff * Math.sin(360 * Math.random() * Math.PI / 180),\ny: this.diff * Math.sin(360 * Math.random() * Math.PI / 180),\nz: this.diff * Math.sin(360 * Math.random() * Math.PI / 180)\n}\n}));\nthis.calc.push({\nx: 360 * Math.random(),\ny: 360 * Math.random(),\nz: 360 * Math.random()\n});\n};\nBuild.prototype.upd = function() {\ncam.obj.x += (this.toX - cam.obj.x) * 0.05;\ncam.obj.y += (this.toY - cam.obj.y) * 0.05;\n};\nBuild.prototype.draw = function() {\nthis.$.clearRect(0, 0, this.canvas.width, this.canvas.height);\ncam.upd();\nthis.rotObj.x += 0.1;\nthis.rotObj.y += 0.1;\nthis.rotObj.z += 0.1;\nfor (var i = 0; i < this.varr.length; i++) {\nfor (var val in this.calc[i]) {\nif (this.calc[i].hasOwnProperty(val)) {\nthis.calc[i][val] += this.vel;\nif (this.calc[i][val] > this.lim) this.calc[i][val] = 0;\n}\n}\nthis.varr[i].transIn.pos = {\nx: this.diff * Math.cos(this.calc[i].x * Math.PI / 180),\ny: this.diff * Math.sin(this.calc[i].y * Math.PI / 180),\nz: this.diff * Math.sin(this.calc[i].z * Math.PI / 180)\n};\nthis.varr[i].transIn.rot = this.rotObj;\nthis.varr[i].transIn.sz = this.objSz;\nthis.varr[i].vupd();\nif (this.varr[i].transOut.p < 0) continue;\nvar g = this.$.createRadialGradient(this.varr[i].transOut.x, this.varr[i].transOut.y, this.varr[i].transOut.p, this.varr[i].transOut.x, this.varr[i].transOut.y, this.varr[i].transOut.p * 2);\nthis.$.globalCompositeOperation = 'lighter';\ng.addColorStop(0, 'hsla(255, 255%, 255%, 1)');\ng.addColorStop(.5, 'hsla(' + (i + 2) + ',85%, 40%,1)');\ng.addColorStop(1, 'hsla(' + (i) + ',85%, 40%,.5)');\nthis.$.fillStyle = g;\nthis.$.beginPath();\nthis.$.arc(this.varr[i].transOut.x, this.varr[i].transOut.y, this.varr[i].transOut.p * 2, 0, Math.PI * 2, false);\nthis.$.fill();\nthis.$.closePath();\n}\n};\nBuild.prototype.anim = function() {\nwindow.requestAnimationFrame = (function() {\nreturn window.requestAnimationFrame ||\nfunction(callback, element) {\nwindow.setTimeout(callback, 1000 / 60);\n};\n})();\nvar anim = function() {\nthis.upd();\nthis.draw();\nwindow.requestAnimationFrame(anim);\n}.bind(this);\nwindow.requestAnimationFrame(anim);\n};\nBuild.prototype.run = function() {\nthis.anim();\nwindow.addEventListener('mousemove', function(e) {\nthis.toX = (e.clientX - this.canvas.width / 2) * -0.8;\nthis.toY = (e.clientY - this.canvas.height / 2) * 0.8;\n}.bind(this));\nwindow.addEventListener('touchmove', function(e) {\ne.preventDefault();\nthis.toX = (e.touches[0].clientX - this.canvas.width / 2) * -0.8;\nthis.toY = (e.touches[0].clientY - this.canvas.height / 2) * 0.8;\n}.bind(this));\nwindow.addEventListener('mousedown', function(e) {\nfor (var i = 0; i < 100; i++) {\nthis.add();\n}\n}.bind(this));\nwindow.addEventListener('touchstart', function(e) {\ne.preventDefault();\nfor (var i = 0; i < 100; i++) {\nthis.add();\n}\n}.bind(this));\n};\nvar app = new Build();\napp.run();\n})();\nwindow.addEventListener('resize', function() {\ncanvas.width = w = window.innerWidth;\ncanvas.height = h = window.innerHeight;\n}, false);\n"));
    e_0.appendChild(e_5);
    container.appendChild(e_0);
    return container;
}
